# This is a basic workflow to help you get started with Actions

name: MAGE_CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ develop/github-action, master ]
    tags:
      - '*'
  release:
    types:
      - edited
    branches: [ develop/github-action, master ]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  django_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Add environment variable
        run: export VIRTUAL_ENV=$GITHUB_WORKSPACE/mage-venv

      - name: Install virtual environment
        run: python -m venv ./mag-venv

      - name: Activate virtual env
        run: export PATH="$VIRTUAL_ENV:$PATH"

      - name: Install python modules
        run: pip install -r requirements.txt --upgrade

      - name: test
        run: |
          python manage.py test

  publish_docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Useful echo of the github obj
        id: echo_github_object
        env:
          GITHUB_CONTEXT_TO_JSON: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT_TO_JSON"

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: enioka/mage

      - name: Collect branch tag
        id: docker_tag
        run: |
          if [ "${{github.event_name}}" == "release" ];
          then
            echo "::set-output name=value::$TAG";
          else
            echo "::set-output name=value::nightly";
          fi
        env:
          TAG: ${{ github.event.release.tag_name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.docker_tag.outputs.value }}
          context: .
          file: ./docker/Dockerfile
          push: false
      
  create_release:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: [ django_test, publish_docker ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Get tag
        id: get_tag
        run: |
          [[ $tag_name =~ refs\/tags\/(.*) ]];
          echo "::set-output name=value::${BASH_REMATCH[1]}";

      - name: Create docker image archive
        run: docker save mage:latest | gzip > mage_latest.tar.gz

      - name: Create release
        uses: softprops/action-gh-release@v1
          with:
            files: mage_latest.tar.gz
            tag_name: ${{ steps.get_tag.outputs.value }}
            fail_on_unmatched_files: true


